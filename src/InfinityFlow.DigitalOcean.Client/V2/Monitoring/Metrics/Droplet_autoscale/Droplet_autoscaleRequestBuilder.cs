// <auto-generated/>
#pragma warning disable CS0618
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_cpu_utilization;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_instances;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_memory_utilization;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_cpu_utilization;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_instances;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_memory_utilization;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\monitoring\metrics\droplet_autoscale
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Droplet_autoscaleRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The current_cpu_utilization property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_cpu_utilization.Current_cpu_utilizationRequestBuilder Current_cpu_utilization
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_cpu_utilization.Current_cpu_utilizationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The current_instances property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_instances.Current_instancesRequestBuilder Current_instances
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_instances.Current_instancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The current_memory_utilization property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_memory_utilization.Current_memory_utilizationRequestBuilder Current_memory_utilization
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Current_memory_utilization.Current_memory_utilizationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The target_cpu_utilization property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_cpu_utilization.Target_cpu_utilizationRequestBuilder Target_cpu_utilization
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_cpu_utilization.Target_cpu_utilizationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The target_instances property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_instances.Target_instancesRequestBuilder Target_instances
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_instances.Target_instancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The target_memory_utilization property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_memory_utilization.Target_memory_utilizationRequestBuilder Target_memory_utilization
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Target_memory_utilization.Target_memory_utilizationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Droplet_autoscaleRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Droplet_autoscaleRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/monitoring/metrics/droplet_autoscale", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Droplet_autoscaleRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Droplet_autoscaleRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/monitoring/metrics/droplet_autoscale", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
