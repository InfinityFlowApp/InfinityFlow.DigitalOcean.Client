// <auto-generated/>
#pragma warning disable CS0618
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Apps;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Load_balancer;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\monitoring\metrics
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class MetricsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The apps property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Apps.AppsRequestBuilder Apps
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Apps.AppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The droplet property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet.DropletRequestBuilder Droplet
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet.DropletRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The droplet_autoscale property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Droplet_autoscaleRequestBuilder Droplet_autoscale
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Droplet_autoscale.Droplet_autoscaleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The load_balancer property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Load_balancer.Load_balancerRequestBuilder Load_balancer
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.Load_balancer.Load_balancerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.MetricsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MetricsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/monitoring/metrics", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.Metrics.MetricsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MetricsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/monitoring/metrics", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
