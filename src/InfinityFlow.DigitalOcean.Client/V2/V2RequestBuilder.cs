// <auto-generated/>
#pragma warning disable CS0618
using InfinityFlow.DigitalOcean.Client.V2.Account;
using InfinityFlow.DigitalOcean.Client.V2.Actions;
using InfinityFlow.DigitalOcean.Client.V2.Apps;
using InfinityFlow.DigitalOcean.Client.V2.Cdn;
using InfinityFlow.DigitalOcean.Client.V2.Certificates;
using InfinityFlow.DigitalOcean.Client.V2.Customers;
using InfinityFlow.DigitalOcean.Client.V2.Databases;
using InfinityFlow.DigitalOcean.Client.V2.Domains;
using InfinityFlow.DigitalOcean.Client.V2.Droplets;
using InfinityFlow.DigitalOcean.Client.V2.Firewalls;
using InfinityFlow.DigitalOcean.Client.V2.Floating_ips;
using InfinityFlow.DigitalOcean.Client.V2.Functions;
using InfinityFlow.DigitalOcean.Client.V2.GenAi;
using InfinityFlow.DigitalOcean.Client.V2.Images;
using InfinityFlow.DigitalOcean.Client.V2.Kubernetes;
using InfinityFlow.DigitalOcean.Client.V2.Load_balancers;
using InfinityFlow.DigitalOcean.Client.V2.Monitoring;
using InfinityFlow.DigitalOcean.Client.V2.OneClicks;
using InfinityFlow.DigitalOcean.Client.V2.Projects;
using InfinityFlow.DigitalOcean.Client.V2.Regions;
using InfinityFlow.DigitalOcean.Client.V2.Registry;
using InfinityFlow.DigitalOcean.Client.V2.Reports;
using InfinityFlow.DigitalOcean.Client.V2.Reserved_ips;
using InfinityFlow.DigitalOcean.Client.V2.Sizes;
using InfinityFlow.DigitalOcean.Client.V2.Snapshots;
using InfinityFlow.DigitalOcean.Client.V2.Tags;
using InfinityFlow.DigitalOcean.Client.V2.Uptime;
using InfinityFlow.DigitalOcean.Client.V2.Volumes;
using InfinityFlow.DigitalOcean.Client.V2.Vpc_peerings;
using InfinityFlow.DigitalOcean.Client.V2.Vpcs;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace InfinityFlow.DigitalOcean.Client.V2
{
    /// <summary>
    /// Builds and executes requests for operations under \v2
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V2RequestBuilder : BaseRequestBuilder
    {
        /// <summary>The account property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Account.AccountRequestBuilder Account
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Account.AccountRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The actions property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Actions.ActionsRequestBuilder Actions
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Actions.ActionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The apps property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Apps.AppsRequestBuilder Apps
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Apps.AppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cdn property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Cdn.CdnRequestBuilder Cdn
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Cdn.CdnRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The certificates property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Certificates.CertificatesRequestBuilder Certificates
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Certificates.CertificatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customers property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Customers.CustomersRequestBuilder Customers
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Customers.CustomersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The databases property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Databases.DatabasesRequestBuilder Databases
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Databases.DatabasesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The domains property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Domains.DomainsRequestBuilder Domains
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Domains.DomainsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The droplets property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Droplets.DropletsRequestBuilder Droplets
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Droplets.DropletsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The firewalls property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Firewalls.FirewallsRequestBuilder Firewalls
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Firewalls.FirewallsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The floating_ips property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Floating_ips.Floating_ipsRequestBuilder Floating_ips
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Floating_ips.Floating_ipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The functions property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Functions.FunctionsRequestBuilder Functions
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Functions.FunctionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The genAi property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.GenAi.GenAiRequestBuilder GenAi
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.GenAi.GenAiRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The images property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Images.ImagesRequestBuilder Images
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Images.ImagesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The kubernetes property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Kubernetes.KubernetesRequestBuilder Kubernetes
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Kubernetes.KubernetesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The load_balancers property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Load_balancers.Load_balancersRequestBuilder Load_balancers
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Load_balancers.Load_balancersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The monitoring property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.MonitoringRequestBuilder Monitoring
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Monitoring.MonitoringRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The OneClicks property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.OneClicks.OneClicksRequestBuilder OneClicks
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.OneClicks.OneClicksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The projects property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Projects.ProjectsRequestBuilder Projects
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Projects.ProjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The regions property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Regions.RegionsRequestBuilder Regions
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Regions.RegionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The registry property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Registry.RegistryRequestBuilder Registry
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Registry.RegistryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reports property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Reports.ReportsRequestBuilder Reports
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Reports.ReportsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reserved_ips property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Reserved_ips.Reserved_ipsRequestBuilder Reserved_ips
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Reserved_ips.Reserved_ipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sizes property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Sizes.SizesRequestBuilder Sizes
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Sizes.SizesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The snapshots property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Snapshots.SnapshotsRequestBuilder Snapshots
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Snapshots.SnapshotsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tags property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Tags.TagsRequestBuilder Tags
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Tags.TagsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The uptime property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Uptime.UptimeRequestBuilder Uptime
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Uptime.UptimeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The volumes property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Volumes.VolumesRequestBuilder Volumes
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Volumes.VolumesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The vpcs property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Vpcs.VpcsRequestBuilder Vpcs
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Vpcs.VpcsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The vpc_peerings property</summary>
        public global::InfinityFlow.DigitalOcean.Client.V2.Vpc_peerings.Vpc_peeringsRequestBuilder Vpc_peerings
        {
            get => new global::InfinityFlow.DigitalOcean.Client.V2.Vpc_peerings.Vpc_peeringsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.V2.V2RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V2RequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.V2.V2RequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public V2RequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
