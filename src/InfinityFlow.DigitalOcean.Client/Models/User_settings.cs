// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class User_settings : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>ACLs (Access Control Lists) specifying permissions on topics within a Kafka cluster.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_acl>? Acl { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_acl> Acl { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ACLs (Access Control Lists) specifying permissions on index within a OpenSearch cluster.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl>? OpensearchAcl { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl> OpensearchAcl { get; set; }
#endif
        /// <summary>For Postgres clusters, set to `true` for a user with replication rights.This option is not currently supported for other database engines.</summary>
        public bool? PgAllowReplication { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.User_settings"/> and sets the default values.
        /// </summary>
        public User_settings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.User_settings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.User_settings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.User_settings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acl", n => { Acl = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_acl>(global::InfinityFlow.DigitalOcean.Client.Models.User_settings_acl.CreateFromDiscriminatorValue)?.AsList(); } },
                { "opensearch_acl", n => { OpensearchAcl = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl>(global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pg_allow_replication", n => { PgAllowReplication = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_acl>("acl", Acl);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl>("opensearch_acl", OpensearchAcl);
            writer.WriteBoolValue("pg_allow_replication", PgAllowReplication);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
