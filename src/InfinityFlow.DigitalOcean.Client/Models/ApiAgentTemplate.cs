// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>
    /// Represents an AgentTemplate entity
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApiAgentTemplate : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The agent template&apos;s creation date</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Description of the agent template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Instructions for the agent template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Instruction { get; set; }
#nullable restore
#else
        public string Instruction { get; set; }
#endif
        /// <summary>The &apos;k&apos; value for the agent template</summary>
        public long? K { get; set; }
        /// <summary>List of knowledge bases associated with the agent template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.ApiKnowledgeBase>? KnowledgeBases { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.ApiKnowledgeBase> KnowledgeBases { get; set; }
#endif
        /// <summary>The max_tokens setting for the agent template</summary>
        public long? MaxTokens { get; set; }
        /// <summary>Description of a Model</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModel? Model { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModel Model { get; set; }
#endif
        /// <summary>Name of the agent template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The temperature setting for the agent template</summary>
        public float? Temperature { get; set; }
        /// <summary>The top_p setting for the agent template</summary>
        public float? TopP { get; set; }
        /// <summary>The agent template&apos;s last updated date</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Unique id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate"/> and sets the default values.
        /// </summary>
        public ApiAgentTemplate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "instruction", n => { Instruction = n.GetStringValue(); } },
                { "k", n => { K = n.GetLongValue(); } },
                { "knowledge_bases", n => { KnowledgeBases = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.ApiKnowledgeBase>(global::InfinityFlow.DigitalOcean.Client.Models.ApiKnowledgeBase.CreateFromDiscriminatorValue)?.AsList(); } },
                { "max_tokens", n => { MaxTokens = n.GetLongValue(); } },
                { "model", n => { Model = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModel>(global::InfinityFlow.DigitalOcean.Client.Models.ApiModel.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "temperature", n => { Temperature = n.GetFloatValue(); } },
                { "top_p", n => { TopP = n.GetFloatValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("instruction", Instruction);
            writer.WriteLongValue("k", K);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.ApiKnowledgeBase>("knowledge_bases", KnowledgeBases);
            writer.WriteLongValue("max_tokens", MaxTokens);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModel>("model", Model);
            writer.WriteStringValue("name", Name);
            writer.WriteFloatValue("temperature", Temperature);
            writer.WriteFloatValue("top_p", TopP);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
