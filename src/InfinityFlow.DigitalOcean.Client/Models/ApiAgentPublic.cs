// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>
    /// A GenAI Agent&apos;s configuration
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApiAgentPublic : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A Chatbot</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiChatbot? Chatbot { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiChatbot Chatbot { get; set; }
#endif
        /// <summary>Chatbot identifiers</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentChatbotIdentifier>? ChatbotIdentifiers { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentChatbotIdentifier> ChatbotIdentifiers { get; set; }
#endif
        /// <summary>Creation date / time</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Description of deployment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiDeployment? Deployment { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiDeployment Deployment { get; set; }
#endif
        /// <summary>Description of agent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Instructions to the agent on how to use the route</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IfCase { get; set; }
#nullable restore
#else
        public string IfCase { get; set; }
#endif
        /// <summary>Agent instruction. Instructions help your agent to perform its job effectively. See [Write Effective Agent Instructions](https://docs.digitalocean.com/products/genai-platform/concepts/best-practices/#agent-instructions) for best practices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Instruction { get; set; }
#nullable restore
#else
        public string Instruction { get; set; }
#endif
        /// <summary>How many results should be considered from an attached knowledge base</summary>
        public long? K { get; set; }
        /// <summary>Specifies the maximum number of tokens the model can process in a single input or output, set as a number between 1 and 512. This determines the length of each response.</summary>
        public long? MaxTokens { get; set; }
        /// <summary>Description of a Model</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModel? Model { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModel Model { get; set; }
#endif
        /// <summary>Agent name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The DigitalOcean project ID associated with the agent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>Region code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Region { get; set; }
#nullable restore
#else
        public string Region { get; set; }
#endif
        /// <summary>Creation of route date / time</summary>
        public DateTimeOffset? RouteCreatedAt { get; set; }
        /// <summary>Id of user that created the route</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RouteCreatedBy { get; set; }
#nullable restore
#else
        public string RouteCreatedBy { get; set; }
#endif
        /// <summary>Route name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RouteName { get; set; }
#nullable restore
#else
        public string RouteName { get; set; }
#endif
        /// <summary>Route uuid</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RouteUuid { get; set; }
#nullable restore
#else
        public string RouteUuid { get; set; }
#endif
        /// <summary>A set of abitrary tags to organize your agent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>Controls the modelâ€™s creativity, specified as a number between 0 and 1. Lower values produce more predictable and conservative responses, while higher values encourage creativity and variation.</summary>
        public float? Temperature { get; set; }
        /// <summary>Represents an AgentTemplate entity</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate? Template { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate Template { get; set; }
#endif
        /// <summary>Defines the cumulative probability threshold for word selection, specified as a number between 0 and 1. Higher values allow for more diverse outputs, while lower values ensure focused and coherent responses.</summary>
        public float? TopP { get; set; }
        /// <summary>Last modified</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Access your agent under this url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>Id of user that created the agent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>Unique agent id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentPublic"/> and sets the default values.
        /// </summary>
        public ApiAgentPublic()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentPublic"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentPublic CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentPublic();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "chatbot", n => { Chatbot = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiChatbot>(global::InfinityFlow.DigitalOcean.Client.Models.ApiChatbot.CreateFromDiscriminatorValue); } },
                { "chatbot_identifiers", n => { ChatbotIdentifiers = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentChatbotIdentifier>(global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentChatbotIdentifier.CreateFromDiscriminatorValue)?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "deployment", n => { Deployment = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiDeployment>(global::InfinityFlow.DigitalOcean.Client.Models.ApiDeployment.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "if_case", n => { IfCase = n.GetStringValue(); } },
                { "instruction", n => { Instruction = n.GetStringValue(); } },
                { "k", n => { K = n.GetLongValue(); } },
                { "max_tokens", n => { MaxTokens = n.GetLongValue(); } },
                { "model", n => { Model = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModel>(global::InfinityFlow.DigitalOcean.Client.Models.ApiModel.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
                { "region", n => { Region = n.GetStringValue(); } },
                { "route_created_at", n => { RouteCreatedAt = n.GetDateTimeOffsetValue(); } },
                { "route_created_by", n => { RouteCreatedBy = n.GetStringValue(); } },
                { "route_name", n => { RouteName = n.GetStringValue(); } },
                { "route_uuid", n => { RouteUuid = n.GetStringValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "temperature", n => { Temperature = n.GetFloatValue(); } },
                { "template", n => { Template = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate>(global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate.CreateFromDiscriminatorValue); } },
                { "top_p", n => { TopP = n.GetFloatValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "user_id", n => { UserId = n.GetStringValue(); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiChatbot>("chatbot", Chatbot);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentChatbotIdentifier>("chatbot_identifiers", ChatbotIdentifiers);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiDeployment>("deployment", Deployment);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("if_case", IfCase);
            writer.WriteStringValue("instruction", Instruction);
            writer.WriteLongValue("k", K);
            writer.WriteLongValue("max_tokens", MaxTokens);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModel>("model", Model);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("project_id", ProjectId);
            writer.WriteStringValue("region", Region);
            writer.WriteDateTimeOffsetValue("route_created_at", RouteCreatedAt);
            writer.WriteStringValue("route_created_by", RouteCreatedBy);
            writer.WriteStringValue("route_name", RouteName);
            writer.WriteStringValue("route_uuid", RouteUuid);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteFloatValue("temperature", Temperature);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgentTemplate>("template", Template);
            writer.WriteFloatValue("top_p", TopP);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteStringValue("url", Url);
            writer.WriteStringValue("user_id", UserId);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
