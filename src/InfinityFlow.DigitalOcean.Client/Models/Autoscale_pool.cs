// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Autoscale_pool : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The number of active Droplets in the autoscale pool.</summary>
        public int? ActiveResourcesCount { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The scaling configuration for an autoscale pool, which is how the pool scales up and down (either by resource utilization or static configuration).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config? Config { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config Config { get; set; }
#endif
        /// <summary>A time value given in ISO8601 combined date and time format that represents when the autoscale pool was created.</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The current_utilization property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Current_utilization? CurrentUtilization { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Current_utilization CurrentUtilization { get; set; }
#endif
        /// <summary>The droplet_template property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template? DropletTemplate { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template DropletTemplate { get; set; }
#endif
        /// <summary>A unique identifier for each autoscale pool instance. This is automatically generated upon autoscale pool creation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The human-readable name set for the autoscale pool.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The current status of the autoscale pool.</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_status? Status { get; set; }
        /// <summary>A time value given in ISO8601 combined date and time format that represents when the autoscale pool was last updated.</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool"/> and sets the default values.
        /// </summary>
        public Autoscale_pool()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_resources_count", n => { ActiveResourcesCount = n.GetIntValue(); } },
                { "config", n => { Config = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config>(global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "current_utilization", n => { CurrentUtilization = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Current_utilization>(global::InfinityFlow.DigitalOcean.Client.Models.Current_utilization.CreateFromDiscriminatorValue); } },
                { "droplet_template", n => { DropletTemplate = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template>(global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_status>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("active_resources_count", ActiveResourcesCount);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config>("config", Config);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Current_utilization>("current_utilization", CurrentUtilization);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template>("droplet_template", DropletTemplate);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_status>("status", Status);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_dynamic_config"/>, <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_static_config"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Autoscale_pool_config : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_dynamic_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_dynamic_config? AutoscalePoolDynamicConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_dynamic_config AutoscalePoolDynamicConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_static_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_static_config? AutoscalePoolStaticConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_static_config AutoscalePoolStaticConfig { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool.Autoscale_pool_config();
                if("autoscale_pool_dynamic_config".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AutoscalePoolDynamicConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_dynamic_config();
                }
                else if("autoscale_pool_static_config".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AutoscalePoolStaticConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_static_config();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AutoscalePoolDynamicConfig != null)
                {
                    return AutoscalePoolDynamicConfig.GetFieldDeserializers();
                }
                else if(AutoscalePoolStaticConfig != null)
                {
                    return AutoscalePoolStaticConfig.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(AutoscalePoolDynamicConfig != null)
                {
                    writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_dynamic_config>(null, AutoscalePoolDynamicConfig);
                }
                else if(AutoscalePoolStaticConfig != null)
                {
                    writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_static_config>(null, AutoscalePoolStaticConfig);
                }
            }
        }
    }
}
#pragma warning restore CS0618
