// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ApiIndexedDataSource : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Timestamp when data source completed indexing</summary>
        public DateTimeOffset? CompletedAt { get; set; }
        /// <summary>Uuid of the indexed data source</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DataSourceUuid { get; set; }
#nullable restore
#else
        public string DataSourceUuid { get; set; }
#endif
        /// <summary>Total count of files that have been indexed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IndexedFileCount { get; set; }
#nullable restore
#else
        public string IndexedFileCount { get; set; }
#endif
        /// <summary>Timestamp when data source started indexing</summary>
        public DateTimeOffset? StartedAt { get; set; }
        /// <summary>Total size of files in data source in bytes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TotalBytes { get; set; }
#nullable restore
#else
        public string TotalBytes { get; set; }
#endif
        /// <summary>Total size of files in data source in bytes that have been indexed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TotalBytesIndexed { get; set; }
#nullable restore
#else
        public string TotalBytesIndexed { get; set; }
#endif
        /// <summary>Total file count in the data source</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TotalFileCount { get; set; }
#nullable restore
#else
        public string TotalFileCount { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiIndexedDataSource"/> and sets the default values.
        /// </summary>
        public ApiIndexedDataSource()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiIndexedDataSource"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.ApiIndexedDataSource CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.ApiIndexedDataSource();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "completed_at", n => { CompletedAt = n.GetDateTimeOffsetValue(); } },
                { "data_source_uuid", n => { DataSourceUuid = n.GetStringValue(); } },
                { "indexed_file_count", n => { IndexedFileCount = n.GetStringValue(); } },
                { "started_at", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
                { "total_bytes", n => { TotalBytes = n.GetStringValue(); } },
                { "total_bytes_indexed", n => { TotalBytesIndexed = n.GetStringValue(); } },
                { "total_file_count", n => { TotalFileCount = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("completed_at", CompletedAt);
            writer.WriteStringValue("data_source_uuid", DataSourceUuid);
            writer.WriteStringValue("indexed_file_count", IndexedFileCount);
            writer.WriteDateTimeOffsetValue("started_at", StartedAt);
            writer.WriteStringValue("total_bytes", TotalBytes);
            writer.WriteStringValue("total_bytes_indexed", TotalBytesIndexed);
            writer.WriteStringValue("total_file_count", TotalFileCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
