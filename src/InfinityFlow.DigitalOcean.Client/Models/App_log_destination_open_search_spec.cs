// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>
    /// OpenSearch configuration.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class App_log_destination_open_search_spec : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Configure Username and/or Password for Basic authentication.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec_basic_auth? BasicAuth { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec_basic_auth BasicAuth { get; set; }
#endif
        /// <summary>The name of a DigitalOcean DBaaS OpenSearch cluster to use as a log forwarding destination.Cannot be specified if `endpoint` is also specified.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClusterName { get; set; }
#nullable restore
#else
        public string ClusterName { get; set; }
#endif
        /// <summary>OpenSearch API Endpoint. Only HTTPS is supported. Format: https://&lt;host&gt;:&lt;port&gt;.Cannot be specified if `cluster_name` is also specified.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Endpoint { get; set; }
#nullable restore
#else
        public string Endpoint { get; set; }
#endif
        /// <summary>The index name to use for the logs. If not set, the default index name is &quot;logs&quot;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IndexName { get; set; }
#nullable restore
#else
        public string IndexName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec"/> and sets the default values.
        /// </summary>
        public App_log_destination_open_search_spec()
        {
            AdditionalData = new Dictionary<string, object>();
            IndexName = "logs";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "basic_auth", n => { BasicAuth = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec_basic_auth>(global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec_basic_auth.CreateFromDiscriminatorValue); } },
                { "cluster_name", n => { ClusterName = n.GetStringValue(); } },
                { "endpoint", n => { Endpoint = n.GetStringValue(); } },
                { "index_name", n => { IndexName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_open_search_spec_basic_auth>("basic_auth", BasicAuth);
            writer.WriteStringValue("cluster_name", ClusterName);
            writer.WriteStringValue("endpoint", Endpoint);
            writer.WriteStringValue("index_name", IndexName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
