// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class App_variable_definition : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The variable name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Key { get; set; }
#nullable restore
#else
        public string Key { get; set; }
#endif
        /// <summary>- RUN_TIME: Made available only at run-time- BUILD_TIME: Made available only at build-time- RUN_AND_BUILD_TIME: Made available at both build and run-time</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_scope? Scope { get; set; }
        /// <summary>- GENERAL: A plain-text environment variable- SECRET: A secret encrypted environment variable</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_type? Type { get; set; }
        /// <summary>The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Value { get; set; }
#nullable restore
#else
        public string Value { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition"/> and sets the default values.
        /// </summary>
        public App_variable_definition()
        {
            AdditionalData = new Dictionary<string, object>();
            Scope = global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_scope.RUN_AND_BUILD_TIME;
            Type = global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_type.GENERAL;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "key", n => { Key = n.GetStringValue(); } },
                { "scope", n => { Scope = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_scope>(); } },
                { "type", n => { Type = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_type>(); } },
                { "value", n => { Value = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("key", Key);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_scope>("scope", Scope);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition_type>("type", Type);
            writer.WriteStringValue("value", Value);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
