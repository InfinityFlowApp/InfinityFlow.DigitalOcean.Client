// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>A slug representing the database engine used for the cluster. The possible values are: &quot;pg&quot; for PostgreSQL, &quot;mysql&quot; for MySQL, &quot;redis&quot; for Redis, &quot;mongodb&quot; for MongoDB, &quot;kafka&quot; for Kafka, and &quot;opensearch&quot; for OpenSearch.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public enum Database_cluster_engine
    {
        [EnumMember(Value = "pg")]
        #pragma warning disable CS1591
        Pg,
        #pragma warning restore CS1591
        [EnumMember(Value = "mysql")]
        #pragma warning disable CS1591
        Mysql,
        #pragma warning restore CS1591
        [EnumMember(Value = "redis")]
        #pragma warning disable CS1591
        Redis,
        #pragma warning restore CS1591
        [EnumMember(Value = "mongodb")]
        #pragma warning disable CS1591
        Mongodb,
        #pragma warning restore CS1591
        [EnumMember(Value = "kafka")]
        #pragma warning disable CS1591
        Kafka,
        #pragma warning restore CS1591
        [EnumMember(Value = "opensearch")]
        #pragma warning disable CS1591
        Opensearch,
        #pragma warning restore CS1591
    }
}
