// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Autoscale_pool_droplet_template : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Droplet image to be used for all Droplets in the autoscale pool. You may specify the slug or the image ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Image { get; set; }
#nullable restore
#else
        public string Image { get; set; }
#endif
        /// <summary>Assigns a unique IPv6 address to each of the Droplets in the autoscale pool.</summary>
        public bool? Ipv6 { get; set; }
        /// <summary>The name(s) to be applied to all Droplets in the autoscale pool.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The project that the Droplets in the autoscale pool will belong to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>The datacenter in which all of the Droplets will be created.</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template_region? Region { get; set; }
        /// <summary>The Droplet size to be used for all Droplets in the autoscale pool.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Size { get; set; }
#nullable restore
#else
        public string Size { get; set; }
#endif
        /// <summary>The SSH keys to be installed on the Droplets in the autoscale pool. You can either specify the key ID or the fingerprint.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SshKeys { get; set; }
#nullable restore
#else
        public List<string> SshKeys { get; set; }
#endif
        /// <summary>The tags to apply to each of the Droplets in the autoscale pool.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>A string containing user data that cloud-init consumes to configure a Droplet on first boot. User data is often a cloud-config file or Bash script. It must be plain text and may not exceed 64 KiB in size.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserData { get; set; }
#nullable restore
#else
        public string UserData { get; set; }
#endif
        /// <summary>The VPC where the Droplets in the autoscale pool will be created. The VPC must be in the region where you want to create the Droplets.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VpcUuid { get; set; }
#nullable restore
#else
        public string VpcUuid { get; set; }
#endif
        /// <summary>Installs the Droplet agent. This must be set to true to monitor Droplets for resource utilization scaling.</summary>
        public bool? WithDropletAgent { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template"/> and sets the default values.
        /// </summary>
        public Autoscale_pool_droplet_template()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "image", n => { Image = n.GetStringValue(); } },
                { "ipv6", n => { Ipv6 = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
                { "region", n => { Region = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template_region>(); } },
                { "size", n => { Size = n.GetStringValue(); } },
                { "ssh_keys", n => { SshKeys = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "user_data", n => { UserData = n.GetStringValue(); } },
                { "vpc_uuid", n => { VpcUuid = n.GetStringValue(); } },
                { "with_droplet_agent", n => { WithDropletAgent = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("image", Image);
            writer.WriteBoolValue("ipv6", Ipv6);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("project_id", ProjectId);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Autoscale_pool_droplet_template_region>("region", Region);
            writer.WriteStringValue("size", Size);
            writer.WriteCollectionOfPrimitiveValues<string>("ssh_keys", SshKeys);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteStringValue("user_data", UserData);
            writer.WriteStringValue("vpc_uuid", VpcUuid);
            writer.WriteBoolValue("with_droplet_agent", WithDropletAgent);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
