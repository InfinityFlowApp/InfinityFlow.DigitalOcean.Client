// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Database_replica : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The connection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_connection? Connection { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_connection Connection { get; set; }
#endif
        /// <summary>A time value given in ISO8601 combined date and time format that represents when the database cluster was created.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>A unique ID that can be used to identify and reference a database replica.</summary>
        public Guid? Id { get; private set; }
        /// <summary>The name to give the read-only replicating</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The private_connection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_connection? PrivateConnection { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_connection PrivateConnection { get; set; }
#endif
        /// <summary>A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account&apos;s default VPC for the region.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivateNetworkUuid { get; set; }
#nullable restore
#else
        public string PrivateNetworkUuid { get; set; }
#endif
        /// <summary>A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Region { get; set; }
#nullable restore
#else
        public string Region { get; set; }
#endif
        /// <summary>A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Size { get; set; }
#nullable restore
#else
        public string Size { get; set; }
#endif
        /// <summary>A string representing the current status of the database cluster.</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_replica_status? Status { get; private set; }
        /// <summary>Additional storage added to the cluster, in MiB. If null, no additional storage is added to the cluster, beyond what is provided as a base amount from the &apos;size&apos; and any previously added additional storage.</summary>
        public int? StorageSizeMib { get; set; }
        /// <summary>A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Database_replica"/> and sets the default values.
        /// </summary>
        public Database_replica()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Database_replica"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Database_replica CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Database_replica();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "connection", n => { Connection = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_connection>(global::InfinityFlow.DigitalOcean.Client.Models.Database_connection.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "private_connection", n => { PrivateConnection = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_connection>(global::InfinityFlow.DigitalOcean.Client.Models.Database_connection.CreateFromDiscriminatorValue); } },
                { "private_network_uuid", n => { PrivateNetworkUuid = n.GetStringValue(); } },
                { "region", n => { Region = n.GetStringValue(); } },
                { "size", n => { Size = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_replica_status>(); } },
                { "storage_size_mib", n => { StorageSizeMib = n.GetIntValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_connection>("connection", Connection);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_connection>("private_connection", PrivateConnection);
            writer.WriteStringValue("private_network_uuid", PrivateNetworkUuid);
            writer.WriteStringValue("region", Region);
            writer.WriteStringValue("size", Size);
            writer.WriteIntValue("storage_size_mib", StorageSizeMib);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
