// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>
    /// Description of a Model
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApiModel : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Agreement Description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiAgreement? Agreement { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiAgreement Agreement { get; set; }
#endif
        /// <summary>Creation date / time</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Internally used name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InferenceName { get; set; }
#nullable restore
#else
        public string InferenceName { get; set; }
#endif
        /// <summary>Internally used version</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InferenceVersion { get; set; }
#nullable restore
#else
        public string InferenceVersion { get; set; }
#endif
        /// <summary>True if it is a foundational model provided by do</summary>
        public bool? IsFoundational { get; set; }
        /// <summary>Additional meta data</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModel_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModel_metadata Metadata { get; set; }
#endif
        /// <summary>Name of the model</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Unique id of the model, this model is based on</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentUuid { get; set; }
#nullable restore
#else
        public string ParentUuid { get; set; }
#endif
        /// <summary>The provider property</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModelProvider? Provider { get; set; }
        /// <summary>Last modified</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>Model has been fully uploaded</summary>
        public bool? UploadComplete { get; set; }
        /// <summary>Download url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>Unique id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>Version Information about a Model</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModelVersion? Version { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.ApiModelVersion Version { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiModel"/> and sets the default values.
        /// </summary>
        public ApiModel()
        {
            AdditionalData = new Dictionary<string, object>();
            Provider = global::InfinityFlow.DigitalOcean.Client.Models.ApiModelProvider.MODEL_PROVIDER_DIGITALOCEAN;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.ApiModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.ApiModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.ApiModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "agreement", n => { Agreement = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgreement>(global::InfinityFlow.DigitalOcean.Client.Models.ApiAgreement.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "inference_name", n => { InferenceName = n.GetStringValue(); } },
                { "inference_version", n => { InferenceVersion = n.GetStringValue(); } },
                { "is_foundational", n => { IsFoundational = n.GetBoolValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModel_metadata>(global::InfinityFlow.DigitalOcean.Client.Models.ApiModel_metadata.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parent_uuid", n => { ParentUuid = n.GetStringValue(); } },
                { "provider", n => { Provider = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModelProvider>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "upload_complete", n => { UploadComplete = n.GetBoolValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
                { "version", n => { Version = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModelVersion>(global::InfinityFlow.DigitalOcean.Client.Models.ApiModelVersion.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiAgreement>("agreement", Agreement);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("inference_name", InferenceName);
            writer.WriteStringValue("inference_version", InferenceVersion);
            writer.WriteBoolValue("is_foundational", IsFoundational);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModel_metadata>("metadata", Metadata);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("parent_uuid", ParentUuid);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModelProvider>("provider", Provider);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteBoolValue("upload_complete", UploadComplete);
            writer.WriteStringValue("url", Url);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.ApiModelVersion>("version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
