// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Trigger_info : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>UTC time string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>Name of function(action) that exists in the given namespace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Function { get; set; }
#nullable restore
#else
        public string Function { get; set; }
#endif
        /// <summary>Indicates weather the trigger is paused or unpaused.</summary>
        public bool? IsEnabled { get; set; }
        /// <summary>The trigger&apos;s unique name within the namespace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>A unique string format of UUID with a prefix fn-.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Namespace { get; set; }
#nullable restore
#else
        public string Namespace { get; set; }
#endif
        /// <summary>Trigger details for SCHEDULED type, where body is optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Scheduled_details? ScheduledDetails { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Scheduled_details ScheduledDetails { get; set; }
#endif
        /// <summary>The scheduled_runs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info_scheduled_runs? ScheduledRuns { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info_scheduled_runs ScheduledRuns { get; set; }
#endif
        /// <summary>String which indicates the type of trigger source like SCHEDULED.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>UTC time string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info"/> and sets the default values.
        /// </summary>
        public Trigger_info()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "function", n => { Function = n.GetStringValue(); } },
                { "is_enabled", n => { IsEnabled = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "namespace", n => { Namespace = n.GetStringValue(); } },
                { "scheduled_details", n => { ScheduledDetails = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Scheduled_details>(global::InfinityFlow.DigitalOcean.Client.Models.Scheduled_details.CreateFromDiscriminatorValue); } },
                { "scheduled_runs", n => { ScheduledRuns = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info_scheduled_runs>(global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info_scheduled_runs.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("function", Function);
            writer.WriteBoolValue("is_enabled", IsEnabled);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("namespace", Namespace);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Scheduled_details>("scheduled_details", ScheduledDetails);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Trigger_info_scheduled_runs>("scheduled_runs", ScheduledRuns);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
