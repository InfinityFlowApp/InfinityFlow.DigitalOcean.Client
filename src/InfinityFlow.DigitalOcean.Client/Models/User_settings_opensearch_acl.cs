// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class User_settings_opensearch_acl : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A regex for matching the indexes that this ACL should apply to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Index { get; set; }
#nullable restore
#else
        public string Index { get; set; }
#endif
        /// <summary>Permission set applied to the ACL. &apos;read&apos; allows user to read from the index. &apos;write&apos; allows for user to write to the index. &apos;readwrite&apos; allows for both &apos;read&apos; and &apos;write&apos; permission. &apos;deny&apos;(default) restricts user from performing any operation over an index. &apos;admin&apos; allows for &apos;readwrite&apos; as well as any operations to administer the index.</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl_permission? Permission { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl"/> and sets the default values.
        /// </summary>
        public User_settings_opensearch_acl()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "index", n => { Index = n.GetStringValue(); } },
                { "permission", n => { Permission = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl_permission>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("index", Index);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.User_settings_opensearch_acl_permission>("permission", Permission);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
