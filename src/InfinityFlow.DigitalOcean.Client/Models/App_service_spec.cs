// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class App_service_spec : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Configuration for automatically scaling this component based on metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_autoscaling? Autoscaling { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_autoscaling Autoscaling { get; set; }
#endif
        /// <summary>The bitbucket property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_bitbucket_source_spec? Bitbucket { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_bitbucket_source_spec Bitbucket { get; set; }
#endif
        /// <summary>An optional build command to run while building this component from source.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BuildCommand { get; set; }
#nullable restore
#else
        public string BuildCommand { get; set; }
#endif
        /// <summary>The cors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy? Cors { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy Cors { get; set; }
#endif
        /// <summary>The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DockerfilePath { get; set; }
#nullable restore
#else
        public string DockerfilePath { get; set; }
#endif
        /// <summary>An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://docs.digitalocean.com/products/app-platform/).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EnvironmentSlug { get; set; }
#nullable restore
#else
        public string EnvironmentSlug { get; set; }
#endif
        /// <summary>A list of environment variables made available to the component.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition>? Envs { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition> Envs { get; set; }
#endif
        /// <summary>The git property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec? Git { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec Git { get; set; }
#endif
        /// <summary>The github property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec? Github { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec Github { get; set; }
#endif
        /// <summary>The gitlab property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec? Gitlab { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec Gitlab { get; set; }
#endif
        /// <summary>The health_check property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_health_check? HealthCheck { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_health_check HealthCheck { get; set; }
#endif
        /// <summary>The internal port on which this service&apos;s run command will listen. Default: 8080If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.</summary>
        public long? HttpPort { get; set; }
        /// <summary>The image property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_image_source_spec? Image { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_image_source_spec Image { get; set; }
#endif
        /// <summary>The amount of instances that this component should be scaled to. Default: 1. Must not be set if autoscaling is used.</summary>
        public long? InstanceCount { get; set; }
        /// <summary>The instance size to use for this component. Default: `apps-s-1vcpu-0.5gb`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug? InstanceSizeSlug { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug InstanceSizeSlug { get; set; }
#endif
        /// <summary>The ports on which this service will listen for internal traffic.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? InternalPorts { get; set; }
#nullable restore
#else
        public List<long?> InternalPorts { get; set; }
#endif
        /// <summary>A list of configured log forwarding destinations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition>? LogDestinations { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition> LogDestinations { get; set; }
#endif
        /// <summary>The name. Must be unique across all components within the same app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The protocol which the service uses to serve traffic on the http_port.- `HTTP`: The app is serving the HTTP protocol. Default.- `HTTP2`: The app is serving the HTTP/2 protocol. Currently, this needs to be implemented in the service by serving HTTP/2 cleartext (h2c).</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_protocol? Protocol { get; set; }
        /// <summary>(Deprecated - Use Ingress Rules instead). A list of HTTP routes that should be routed to this component.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>? Routes { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec> Routes { get; set; }
#endif
        /// <summary>An optional run command to override the component&apos;s default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RunCommand { get; set; }
#nullable restore
#else
        public string RunCommand { get; set; }
#endif
        /// <summary>An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceDir { get; set; }
#nullable restore
#else
        public string SourceDir { get; set; }
#endif
        /// <summary>The termination property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_termination? Termination { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_termination Termination { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec"/> and sets the default values.
        /// </summary>
        public App_service_spec()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "autoscaling", n => { Autoscaling = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_autoscaling>(global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_autoscaling.CreateFromDiscriminatorValue); } },
                { "bitbucket", n => { Bitbucket = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_bitbucket_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_bitbucket_source_spec.CreateFromDiscriminatorValue); } },
                { "build_command", n => { BuildCommand = n.GetStringValue(); } },
                { "cors", n => { Cors = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy.CreateFromDiscriminatorValue); } },
                { "dockerfile_path", n => { DockerfilePath = n.GetStringValue(); } },
                { "environment_slug", n => { EnvironmentSlug = n.GetStringValue(); } },
                { "envs", n => { Envs = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition>(global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "git", n => { Git = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec.CreateFromDiscriminatorValue); } },
                { "github", n => { Github = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec.CreateFromDiscriminatorValue); } },
                { "gitlab", n => { Gitlab = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec.CreateFromDiscriminatorValue); } },
                { "health_check", n => { HealthCheck = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_health_check>(global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_health_check.CreateFromDiscriminatorValue); } },
                { "http_port", n => { HttpPort = n.GetLongValue(); } },
                { "image", n => { Image = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_image_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_image_source_spec.CreateFromDiscriminatorValue); } },
                { "instance_count", n => { InstanceCount = n.GetLongValue(); } },
                { "instance_size_slug", n => { InstanceSizeSlug = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug>(global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug.CreateFromDiscriminatorValue); } },
                { "internal_ports", n => { InternalPorts = n.GetCollectionOfPrimitiveValues<long?>()?.AsList(); } },
                { "log_destinations", n => { LogDestinations = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition>(global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "protocol", n => { Protocol = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_protocol>(); } },
                { "routes", n => { Routes = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "run_command", n => { RunCommand = n.GetStringValue(); } },
                { "source_dir", n => { SourceDir = n.GetStringValue(); } },
                { "termination", n => { Termination = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_termination>(global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_termination.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_autoscaling>("autoscaling", Autoscaling);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_bitbucket_source_spec>("bitbucket", Bitbucket);
            writer.WriteStringValue("build_command", BuildCommand);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy>("cors", Cors);
            writer.WriteStringValue("dockerfile_path", DockerfilePath);
            writer.WriteStringValue("environment_slug", EnvironmentSlug);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition>("envs", Envs);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec>("git", Git);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec>("github", Github);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec>("gitlab", Gitlab);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_health_check>("health_check", HealthCheck);
            writer.WriteLongValue("http_port", HttpPort);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_image_source_spec>("image", Image);
            writer.WriteLongValue("instance_count", InstanceCount);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug>("instance_size_slug", InstanceSizeSlug);
            writer.WriteCollectionOfPrimitiveValues<long?>("internal_ports", InternalPorts);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition>("log_destinations", LogDestinations);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_protocol>("protocol", Protocol);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>("routes", Routes);
            writer.WriteStringValue("run_command", RunCommand);
            writer.WriteStringValue("source_dir", SourceDir);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec_termination>("termination", Termination);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class App_service_spec_instance_size_slug : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.App_service_spec_instance_size_slug();
                if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
