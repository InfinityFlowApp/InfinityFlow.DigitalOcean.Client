// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>
    /// The desired configuration of an application.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class App_spec : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Database instances which can provide persistence to workloads within theapplication.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_database_spec>? Databases { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_database_spec> Databases { get; set; }
#endif
        /// <summary>A set of hostnames where the application will be available.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_domain_spec>? Domains { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_domain_spec> Domains { get; set; }
#endif
        /// <summary>Specification for app egress configurations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_egress_spec? Egress { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_egress_spec Egress { get; set; }
#endif
        /// <summary>Workloads which expose publicly-accessible HTTP services via Functions Components.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec>? Functions { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec> Functions { get; set; }
#endif
        /// <summary>Specification for app ingress configurations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_ingress_spec? Ingress { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_ingress_spec Ingress { get; set; }
#endif
        /// <summary>Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_job_spec>? Jobs { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_job_spec> Jobs { get; set; }
#endif
        /// <summary>Specification to configure maintenance settings for the app, such as maintenance mode and archiving the app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_maintenance_spec? Maintenance { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_maintenance_spec Maintenance { get; set; }
#endif
        /// <summary>The name of the app. Must be unique across all apps in the same account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The slug form of the geographical origin of the app. Default: `nearest available`</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.App_spec_region? Region { get; set; }
        /// <summary>Workloads which expose publicly-accessible HTTP services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec>? Services { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec> Services { get; set; }
#endif
        /// <summary>Content which can be rendered to static web assets.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec>? StaticSites { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec> StaticSites { get; set; }
#endif
        /// <summary>Workloads which do not expose publicly-accessible HTTP services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_worker_spec>? Workers { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_worker_spec> Workers { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_spec"/> and sets the default values.
        /// </summary>
        public App_spec()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_spec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App_spec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_spec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "databases", n => { Databases = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_database_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_database_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "domains", n => { Domains = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_domain_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_domain_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "egress", n => { Egress = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_egress_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_egress_spec.CreateFromDiscriminatorValue); } },
                { "functions", n => { Functions = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ingress", n => { Ingress = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_ingress_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_ingress_spec.CreateFromDiscriminatorValue); } },
                { "jobs", n => { Jobs = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_job_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_job_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "maintenance", n => { Maintenance = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_maintenance_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_maintenance_spec.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "region", n => { Region = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_spec_region>(); } },
                { "services", n => { Services = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "static_sites", n => { StaticSites = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "workers", n => { Workers = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_worker_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_worker_spec.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_database_spec>("databases", Databases);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_domain_spec>("domains", Domains);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_egress_spec>("egress", Egress);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec>("functions", Functions);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_ingress_spec>("ingress", Ingress);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_job_spec>("jobs", Jobs);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_maintenance_spec>("maintenance", Maintenance);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.App_spec_region>("region", Region);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_service_spec>("services", Services);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec>("static_sites", StaticSites);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_worker_spec>("workers", Workers);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
