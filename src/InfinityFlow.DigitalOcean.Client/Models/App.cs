// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    /// <summary>
    /// An application&apos;s configuration and status.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class App : IAdditionalDataHolder, IParsable
    {
        /// <summary>The active_deployment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment? ActiveDeployment { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment ActiveDeployment { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>The dedicated_ips property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.Apps_dedicated_egress_ip>? DedicatedIps { get; private set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.Apps_dedicated_egress_ip> DedicatedIps { get; private set; }
#endif
        /// <summary>The default_ingress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultIngress { get; private set; }
#nullable restore
#else
        public string DefaultIngress { get; private set; }
#endif
        /// <summary>The domains property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.Apps_domain>? Domains { get; private set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.Apps_domain> Domains { get; private set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>The in_progress_deployment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment? InProgressDeployment { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment InProgressDeployment { get; set; }
#endif
        /// <summary>The last_deployment_created_at property</summary>
        public DateTimeOffset? LastDeploymentCreatedAt { get; private set; }
        /// <summary>The live_domain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LiveDomain { get; private set; }
#nullable restore
#else
        public string LiveDomain { get; private set; }
#endif
        /// <summary>The live_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LiveUrl { get; private set; }
#nullable restore
#else
        public string LiveUrl { get; private set; }
#endif
        /// <summary>The live_url_base property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LiveUrlBase { get; private set; }
#nullable restore
#else
        public string LiveUrlBase { get; private set; }
#endif
        /// <summary>The owner_uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OwnerUuid { get; private set; }
#nullable restore
#else
        public string OwnerUuid { get; private set; }
#endif
        /// <summary>The pending_deployment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment? PendingDeployment { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment PendingDeployment { get; set; }
#endif
        /// <summary>The pinned_deployment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment? PinnedDeployment { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment PinnedDeployment { get; set; }
#endif
        /// <summary>The project_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; private set; }
#nullable restore
#else
        public string ProjectId { get; private set; }
#endif
        /// <summary>The region property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_region? Region { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_region Region { get; set; }
#endif
        /// <summary>The desired configuration of an application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_spec? Spec { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_spec Spec { get; set; }
#endif
        /// <summary>The tier_slug property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TierSlug { get; private set; }
#nullable restore
#else
        public string TierSlug { get; private set; }
#endif
        /// <summary>The updated_at property</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App"/> and sets the default values.
        /// </summary>
        public App()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active_deployment", n => { ActiveDeployment = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "dedicated_ips", n => { DedicatedIps = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.Apps_dedicated_egress_ip>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_dedicated_egress_ip.CreateFromDiscriminatorValue)?.AsList(); } },
                { "default_ingress", n => { DefaultIngress = n.GetStringValue(); } },
                { "domains", n => { Domains = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.Apps_domain>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_domain.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "in_progress_deployment", n => { InProgressDeployment = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment.CreateFromDiscriminatorValue); } },
                { "last_deployment_created_at", n => { LastDeploymentCreatedAt = n.GetDateTimeOffsetValue(); } },
                { "live_domain", n => { LiveDomain = n.GetStringValue(); } },
                { "live_url", n => { LiveUrl = n.GetStringValue(); } },
                { "live_url_base", n => { LiveUrlBase = n.GetStringValue(); } },
                { "owner_uuid", n => { OwnerUuid = n.GetStringValue(); } },
                { "pending_deployment", n => { PendingDeployment = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment.CreateFromDiscriminatorValue); } },
                { "pinned_deployment", n => { PinnedDeployment = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment.CreateFromDiscriminatorValue); } },
                { "project_id", n => { ProjectId = n.GetStringValue(); } },
                { "region", n => { Region = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_region>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_region.CreateFromDiscriminatorValue); } },
                { "spec", n => { Spec = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_spec.CreateFromDiscriminatorValue); } },
                { "tier_slug", n => { TierSlug = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>("active_deployment", ActiveDeployment);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>("in_progress_deployment", InProgressDeployment);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>("pending_deployment", PendingDeployment);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_deployment>("pinned_deployment", PinnedDeployment);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_region>("region", Region);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_spec>("spec", Spec);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
