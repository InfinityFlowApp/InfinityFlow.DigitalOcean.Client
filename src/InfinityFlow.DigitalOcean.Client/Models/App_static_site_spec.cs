// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class App_static_site_spec : global::InfinityFlow.DigitalOcean.Client.Models.App_component_base, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CatchallDocument { get; set; }
#nullable restore
#else
        public string CatchallDocument { get; set; }
#endif
        /// <summary>The cors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy? Cors { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy Cors { get; set; }
#endif
        /// <summary>The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ErrorDocument { get; set; }
#nullable restore
#else
        public string ErrorDocument { get; set; }
#endif
        /// <summary>The name of the index document to use when serving this static site. Default: index.html</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IndexDocument { get; set; }
#nullable restore
#else
        public string IndexDocument { get; set; }
#endif
        /// <summary>An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OutputDir { get; set; }
#nullable restore
#else
        public string OutputDir { get; set; }
#endif
        /// <summary>(Deprecated - Use Ingress Rules instead). A list of HTTP routes that should be routed to this component.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>? Routes { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec> Routes { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec"/> and sets the default values.
        /// </summary>
        public App_static_site_spec() : base()
        {
            ErrorDocument = "404.html";
            IndexDocument = "index.html";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_static_site_spec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "catchall_document", n => { CatchallDocument = n.GetStringValue(); } },
                { "cors", n => { Cors = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy.CreateFromDiscriminatorValue); } },
                { "error_document", n => { ErrorDocument = n.GetStringValue(); } },
                { "index_document", n => { IndexDocument = n.GetStringValue(); } },
                { "output_dir", n => { OutputDir = n.GetStringValue(); } },
                { "routes", n => { Routes = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("catchall_document", CatchallDocument);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy>("cors", Cors);
            writer.WriteStringValue("error_document", ErrorDocument);
            writer.WriteStringValue("index_document", IndexDocument);
            writer.WriteStringValue("output_dir", OutputDir);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>("routes", Routes);
        }
    }
}
#pragma warning restore CS0618
