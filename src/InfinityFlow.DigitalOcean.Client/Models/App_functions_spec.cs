// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class App_functions_spec : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The alerts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_alert_spec>? Alerts { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_alert_spec> Alerts { get; set; }
#endif
        /// <summary>The cors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy? Cors { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy Cors { get; set; }
#endif
        /// <summary>A list of environment variables made available to the component.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition>? Envs { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition> Envs { get; set; }
#endif
        /// <summary>The git property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec? Git { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec Git { get; set; }
#endif
        /// <summary>The github property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec? Github { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec Github { get; set; }
#endif
        /// <summary>The gitlab property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec? Gitlab { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec Gitlab { get; set; }
#endif
        /// <summary>A list of configured log forwarding destinations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition>? LogDestinations { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition> LogDestinations { get; set; }
#endif
        /// <summary>The name. Must be unique across all components within the same app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>(Deprecated - Use Ingress Rules instead). A list of HTTP routes that should be routed to this component.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>? Routes { get; set; }
#nullable restore
#else
        public List<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec> Routes { get; set; }
#endif
        /// <summary>An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceDir { get; set; }
#nullable restore
#else
        public string SourceDir { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec"/> and sets the default values.
        /// </summary>
        public App_functions_spec()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_functions_spec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alerts", n => { Alerts = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_alert_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_alert_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cors", n => { Cors = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy.CreateFromDiscriminatorValue); } },
                { "envs", n => { Envs = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition>(global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "git", n => { Git = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec.CreateFromDiscriminatorValue); } },
                { "github", n => { Github = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec.CreateFromDiscriminatorValue); } },
                { "gitlab", n => { Gitlab = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec>(global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec.CreateFromDiscriminatorValue); } },
                { "log_destinations", n => { LogDestinations = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition>(global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "routes", n => { Routes = n.GetCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec.CreateFromDiscriminatorValue)?.AsList(); } },
                { "source_dir", n => { SourceDir = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_alert_spec>("alerts", Alerts);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_cors_policy>("cors", Cors);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_variable_definition>("envs", Envs);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_git_source_spec>("git", Git);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_github_source_spec>("github", Github);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Apps_gitlab_source_spec>("gitlab", Gitlab);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_log_destination_definition>("log_destinations", LogDestinations);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::InfinityFlow.DigitalOcean.Client.Models.App_route_spec>("routes", Routes);
            writer.WriteStringValue("source_dir", SourceDir);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
