// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Database_config : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The config property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config? Config { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config Config { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Database_config"/> and sets the default values.
        /// </summary>
        public Database_config()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Database_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Database_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Database_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "config", n => { Config = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config>(global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config>("config", Config);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Kafka_advanced_config"/>, <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Mongo_advanced_config"/>, <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Mysql_advanced_config"/>, <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Opensearch_advanced_config"/>, <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Postgres_advanced_config"/>, <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Redis_advanced_config"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Database_config_config : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Kafka_advanced_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Kafka_advanced_config? KafkaAdvancedConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Kafka_advanced_config KafkaAdvancedConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Mongo_advanced_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Mongo_advanced_config? MongoAdvancedConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Mongo_advanced_config MongoAdvancedConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Mysql_advanced_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Mysql_advanced_config? MysqlAdvancedConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Mysql_advanced_config MysqlAdvancedConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Opensearch_advanced_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Opensearch_advanced_config? OpensearchAdvancedConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Opensearch_advanced_config OpensearchAdvancedConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Postgres_advanced_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Postgres_advanced_config? PostgresAdvancedConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Postgres_advanced_config PostgresAdvancedConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Redis_advanced_config"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::InfinityFlow.DigitalOcean.Client.Models.Redis_advanced_config? RedisAdvancedConfig { get; set; }
#nullable restore
#else
            public global::InfinityFlow.DigitalOcean.Client.Models.Redis_advanced_config RedisAdvancedConfig { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::InfinityFlow.DigitalOcean.Client.Models.Database_config.Database_config_config();
                result.KafkaAdvancedConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Kafka_advanced_config();
                result.MongoAdvancedConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Mongo_advanced_config();
                result.MysqlAdvancedConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Mysql_advanced_config();
                result.OpensearchAdvancedConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Opensearch_advanced_config();
                result.PostgresAdvancedConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Postgres_advanced_config();
                result.RedisAdvancedConfig = new global::InfinityFlow.DigitalOcean.Client.Models.Redis_advanced_config();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(KafkaAdvancedConfig != null || MongoAdvancedConfig != null || MysqlAdvancedConfig != null || OpensearchAdvancedConfig != null || PostgresAdvancedConfig != null || RedisAdvancedConfig != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(KafkaAdvancedConfig, MongoAdvancedConfig, MysqlAdvancedConfig, OpensearchAdvancedConfig, PostgresAdvancedConfig, RedisAdvancedConfig);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Kafka_advanced_config>(null, KafkaAdvancedConfig, MongoAdvancedConfig, MysqlAdvancedConfig, OpensearchAdvancedConfig, PostgresAdvancedConfig, RedisAdvancedConfig);
            }
        }
    }
}
#pragma warning restore CS0618
