// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Apps_instance_size : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bandwidth_allowance_gib property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BandwidthAllowanceGib { get; set; }
#nullable restore
#else
        public string BandwidthAllowanceGib { get; set; }
#endif
        /// <summary>The cpus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cpus { get; set; }
#nullable restore
#else
        public string Cpus { get; set; }
#endif
        /// <summary>The cpu_type property</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Instance_size_cpu_type? CpuType { get; set; }
        /// <summary>The deprecation_intent property</summary>
        public bool? DeprecationIntent { get; set; }
        /// <summary>The memory_bytes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MemoryBytes { get; set; }
#nullable restore
#else
        public string MemoryBytes { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The scalable property</summary>
        public bool? Scalable { get; set; }
        /// <summary>The single_instance_only property</summary>
        public bool? SingleInstanceOnly { get; set; }
        /// <summary>The slug property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>The tier_downgrade_to property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TierDowngradeTo { get; set; }
#nullable restore
#else
        public string TierDowngradeTo { get; set; }
#endif
        /// <summary>The tier_slug property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TierSlug { get; set; }
#nullable restore
#else
        public string TierSlug { get; set; }
#endif
        /// <summary>The tier_upgrade_to property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TierUpgradeTo { get; set; }
#nullable restore
#else
        public string TierUpgradeTo { get; set; }
#endif
        /// <summary>The usd_per_month property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UsdPerMonth { get; set; }
#nullable restore
#else
        public string UsdPerMonth { get; set; }
#endif
        /// <summary>The usd_per_second property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UsdPerSecond { get; set; }
#nullable restore
#else
        public string UsdPerSecond { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Apps_instance_size"/> and sets the default values.
        /// </summary>
        public Apps_instance_size()
        {
            AdditionalData = new Dictionary<string, object>();
            CpuType = global::InfinityFlow.DigitalOcean.Client.Models.Instance_size_cpu_type.UNSPECIFIED;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Apps_instance_size"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Apps_instance_size CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Apps_instance_size();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bandwidth_allowance_gib", n => { BandwidthAllowanceGib = n.GetStringValue(); } },
                { "cpu_type", n => { CpuType = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Instance_size_cpu_type>(); } },
                { "cpus", n => { Cpus = n.GetStringValue(); } },
                { "deprecation_intent", n => { DeprecationIntent = n.GetBoolValue(); } },
                { "memory_bytes", n => { MemoryBytes = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "scalable", n => { Scalable = n.GetBoolValue(); } },
                { "single_instance_only", n => { SingleInstanceOnly = n.GetBoolValue(); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "tier_downgrade_to", n => { TierDowngradeTo = n.GetStringValue(); } },
                { "tier_slug", n => { TierSlug = n.GetStringValue(); } },
                { "tier_upgrade_to", n => { TierUpgradeTo = n.GetStringValue(); } },
                { "usd_per_month", n => { UsdPerMonth = n.GetStringValue(); } },
                { "usd_per_second", n => { UsdPerSecond = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("bandwidth_allowance_gib", BandwidthAllowanceGib);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Instance_size_cpu_type>("cpu_type", CpuType);
            writer.WriteStringValue("cpus", Cpus);
            writer.WriteBoolValue("deprecation_intent", DeprecationIntent);
            writer.WriteStringValue("memory_bytes", MemoryBytes);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("scalable", Scalable);
            writer.WriteBoolValue("single_instance_only", SingleInstanceOnly);
            writer.WriteStringValue("slug", Slug);
            writer.WriteStringValue("tier_downgrade_to", TierDowngradeTo);
            writer.WriteStringValue("tier_slug", TierSlug);
            writer.WriteStringValue("tier_upgrade_to", TierUpgradeTo);
            writer.WriteStringValue("usd_per_month", UsdPerMonth);
            writer.WriteStringValue("usd_per_second", UsdPerSecond);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
