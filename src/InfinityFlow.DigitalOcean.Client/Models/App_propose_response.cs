// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class App_propose_response : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The monthly cost of the proposed app in USD.</summary>
        public int? AppCost { get; set; }
        /// <summary>Indicates whether the app is a static app.</summary>
        public bool? AppIsStatic { get; set; }
        /// <summary>Indicates whether the app name is available.</summary>
        public bool? AppNameAvailable { get; set; }
        /// <summary>The suggested name if the proposed app name is unavailable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppNameSuggestion { get; set; }
#nullable restore
#else
        public string AppNameSuggestion { get; set; }
#endif
        /// <summary>The monthly cost of the proposed app in USD using the previous pricing plan tier. For example, if you propose an app that uses the Professional tier, the `app_tier_downgrade_cost` field displays the monthly cost of the app if it were to use the Basic tier. If the proposed app already uses the lest expensive tier, the field is empty.</summary>
        [Obsolete("")]
        public int? AppTierDowngradeCost { get; set; }
        /// <summary>The maximum number of free static apps the account can have. We will charge you for any additional static apps.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExistingStaticApps { get; set; }
#nullable restore
#else
        public string ExistingStaticApps { get; set; }
#endif
        /// <summary>The desired configuration of an application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.App_spec? Spec { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.App_spec Spec { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_propose_response"/> and sets the default values.
        /// </summary>
        public App_propose_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.App_propose_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.App_propose_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.App_propose_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "app_cost", n => { AppCost = n.GetIntValue(); } },
                { "app_is_static", n => { AppIsStatic = n.GetBoolValue(); } },
                { "app_name_available", n => { AppNameAvailable = n.GetBoolValue(); } },
                { "app_name_suggestion", n => { AppNameSuggestion = n.GetStringValue(); } },
                { "app_tier_downgrade_cost", n => { AppTierDowngradeCost = n.GetIntValue(); } },
                { "existing_static_apps", n => { ExistingStaticApps = n.GetStringValue(); } },
                { "spec", n => { Spec = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_spec>(global::InfinityFlow.DigitalOcean.Client.Models.App_spec.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("app_cost", AppCost);
            writer.WriteBoolValue("app_is_static", AppIsStatic);
            writer.WriteBoolValue("app_name_available", AppNameAvailable);
            writer.WriteStringValue("app_name_suggestion", AppNameSuggestion);
            writer.WriteIntValue("app_tier_downgrade_cost", AppTierDowngradeCost);
            writer.WriteStringValue("existing_static_apps", ExistingStaticApps);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.App_spec>("spec", Spec);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
