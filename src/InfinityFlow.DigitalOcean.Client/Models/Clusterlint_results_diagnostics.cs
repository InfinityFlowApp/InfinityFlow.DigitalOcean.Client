// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Clusterlint_results_diagnostics : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The clusterlint check that resulted in the diagnostic.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CheckName { get; set; }
#nullable restore
#else
        public string CheckName { get; set; }
#endif
        /// <summary>Feedback about the object for users to fix.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>Metadata about the Kubernetes API object the diagnostic is reported on.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics_object? Object { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics_object Object { get; set; }
#endif
        /// <summary>Can be one of error, warning or suggestion.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Severity { get; set; }
#nullable restore
#else
        public string Severity { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics"/> and sets the default values.
        /// </summary>
        public Clusterlint_results_diagnostics()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "check_name", n => { CheckName = n.GetStringValue(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "object", n => { Object = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics_object>(global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics_object.CreateFromDiscriminatorValue); } },
                { "severity", n => { Severity = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("check_name", CheckName);
            writer.WriteStringValue("message", Message);
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Clusterlint_results_diagnostics_object>("object", Object);
            writer.WriteStringValue("severity", Severity);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
