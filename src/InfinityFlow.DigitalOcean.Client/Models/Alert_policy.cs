// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace InfinityFlow.DigitalOcean.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Alert_policy : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The alerts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::InfinityFlow.DigitalOcean.Client.Models.Alerts? Alerts { get; set; }
#nullable restore
#else
        public global::InfinityFlow.DigitalOcean.Client.Models.Alerts Alerts { get; set; }
#endif
        /// <summary>The compare property</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_compare? Compare { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The entities property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Entities { get; set; }
#nullable restore
#else
        public List<string> Entities { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_type? Type { get; set; }
        /// <summary>The uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>The value property</summary>
        public float? Value { get; set; }
        /// <summary>The window property</summary>
        public global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_window? Window { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy"/> and sets the default values.
        /// </summary>
        public Alert_policy()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alerts", n => { Alerts = n.GetObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Alerts>(global::InfinityFlow.DigitalOcean.Client.Models.Alerts.CreateFromDiscriminatorValue); } },
                { "compare", n => { Compare = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_compare>(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "entities", n => { Entities = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "type", n => { Type = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_type>(); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
                { "value", n => { Value = n.GetFloatValue(); } },
                { "window", n => { Window = n.GetEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_window>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::InfinityFlow.DigitalOcean.Client.Models.Alerts>("alerts", Alerts);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_compare>("compare", Compare);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteCollectionOfPrimitiveValues<string>("entities", Entities);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_type>("type", Type);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteFloatValue("value", Value);
            writer.WriteEnumValue<global::InfinityFlow.DigitalOcean.Client.Models.Alert_policy_window>("window", Window);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
